/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package componentevisualpersonalizado;

import java.awt.Color;
import java.awt.Font;
import java.io.Serializable;
import static javax.swing.BorderFactory.createLineBorder;
import org.apache.commons.validator.routines.EmailValidator;



/**
 *
 * @author agalmad
 */
public class Email extends javax.swing.JPanel implements Serializable {

    /**
     * Creates new form Email
     */
    
    private final String emailTextInicio = "email@gmail.com";
    
    private String errorText;
    private String emailText;
    
    private Color errorColor = Color.RED;
    private Color emailColor = Color.BLACK;
    
    private Color emailBorderColor = Color.GREEN;
    private Color emailBorderColorError = Color.RED;

    
    private Font errorFont;
    private Font emailFont;

    //Cambiar Color
    public Color getErrorColor() {
        return jLabelError.getForeground();
    }

    public void setErrorColor(Color errorColor) {
        jLabelError.setForeground(errorColor);
    }

    public Color getEmailColor() {
        return jTextFieldEmail.getForeground();
    }

    public void setEmailColor(Color emailColor) {
        jTextFieldEmail.setForeground(emailColor);
    }

    //Cambiar el color del borde del email
    public Color getEmailBorderColor() {
        return emailBorderColor;
    }

    public void setEmailBorderColor(Color emailBorderColor) {
        this.emailBorderColor = emailBorderColor;
    }

    public Color getEmailBorderColorError() {
        return emailBorderColorError;
    }

    public void setEmailBorderColorError(Color emailBorderColorError) {
        this.emailBorderColorError = emailBorderColorError;
    }
    
    
    
    
    
    //Cambiar Fuentes
    public Font getErrorFont() {
        return jLabelError.getFont();
    }

    public void setErrorFont(Font errorFont) {
        jLabelError.setFont(errorFont);
    }

    public Font getEmailFont() {
        return jTextFieldEmail.getFont();
    }

    public void setEmailFont(Font emailFont) {
        jTextFieldEmail.setFont(emailFont);
    }
    
    
    
    //Cambiar el texto
    public String getErrorText() {
        return jLabelError.getText();
    }

    public void setErrorText(String errorText) {
        jLabelError.setText(errorText);
    }

    public String getEmailText() {
        return jTextFieldEmail.getText();
    }

    public void setEmailText(String emailText) {
        jTextFieldEmail.setText(emailText);
    }

    
    
    public Email() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldEmail = new javax.swing.JTextField();
        jLabelError = new javax.swing.JLabel();

        jTextFieldEmail.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldEmail.setText("email@gmail.com");
        jTextFieldEmail.setToolTipText("");
        jTextFieldEmail.setBorder(null);
        jTextFieldEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldEmailMouseClicked(evt);
            }
        });
        jTextFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmailActionPerformed(evt);
            }
        });
        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyPressed(evt);
            }
        });

        jLabelError.setForeground(new java.awt.Color(204, 0, 0));
        jLabelError.setText("Email Incorrecto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelError)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabelError.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmailActionPerformed
        
    }//GEN-LAST:event_jTextFieldEmailActionPerformed

    private void jTextFieldEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyPressed
        if(emailValidator(jTextFieldEmail.getText())){
            jLabelError.setVisible(false);
            jTextFieldEmail.setBorder(createLineBorder(emailBorderColor));

        }
        else{
            jLabelError.setVisible(true);
            jTextFieldEmail.setBorder(createLineBorder(emailBorderColorError));

        }

    }//GEN-LAST:event_jTextFieldEmailKeyPressed

    private void jTextFieldEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldEmailMouseClicked
        if (jTextFieldEmail.getText().equals(emailTextInicio)) {
            jTextFieldEmail.setText("");
        }
    }//GEN-LAST:event_jTextFieldEmailMouseClicked


    // Validar una dirección de correo electrónico usando el validador
    public static boolean emailValidator(String email)
    {
        // Obtener una instancia de la clase EmailValidator
        EmailValidator validator = EmailValidator.getInstance();
 
        // Devuelve verdadero si la dirección de correo electrónico es válida
        return validator.isValid(email);
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelError;
    private javax.swing.JTextField jTextFieldEmail;
    // End of variables declaration//GEN-END:variables
}
